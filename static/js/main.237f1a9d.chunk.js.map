{"version":3,"sources":["logo.svg","redux-modules/albumSelect/reducer.js","redux-modules/photosData/reducer.js","redux-modules/index.js","store/index.js","components/AlbumSelect/AlbumSelect.jsx","redux-modules/albumSelect/actions.js","redux-modules/photosData/actions.js","components/RequestPanel/RequestPanel.jsx","components/ResultPanel/ResultPanel.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","result","isLoading","rootReducer","combineReducers","selectReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","photoReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","AlbumSelect","handleChange","e","fetchDataPhotos","_this","props","console","log","target","value","_this$props","this","albums","loader","react","onChange","map","el","id","key","title","style","color","display","React","fetchSuccess","dataIsLoading","bool","photosSuccess","RequestPanel","fetchDataAlbums","className","components_AlbumSelect_AlbumSelect","connect","photos","isPhotosLoading","dispatch","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","fetch","then","response","json","sent","t0","error","finish","stop","_x","apply","concat","fetchPhotos","ResultPanel","src","thumbnailUrl","alt","App","react_default","createElement","es","logo","components_RequestPanel_RequestPanel","components_ResultPanel_ResultPanel","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uPCAlCC,EAAe,CACnBC,OAAQ,KACRC,WAAW,GCFPF,EAAe,CACnBC,OAAQ,KACRC,WAAW,GCEAC,EAAcC,YAAgB,CACzCC,cFA2B,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAcU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQC,EAAOC,MACb,IAAK,eACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBL,OAAQS,EAAOI,UACpC,IAAK,kBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBJ,UAAWQ,EAAOI,UACvC,QACE,OAAOR,IENXS,aDD0B,WAAkC,IAAjCT,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAcU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAQC,EAAOC,MACb,IAAK,eACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBL,OAAQS,EAAOI,UACpC,IAAK,yBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBJ,UAAWQ,EAAOI,UACvC,QACE,OAAOR,MERPU,EAAmBC,OAAOC,sCAAwCC,IAE3DC,EAAQC,YAAYlB,EAAaa,EAAiBM,YAAgBC,2DC6BhEC,6MAhCbC,aAAe,SAAAC,GAAK,IACVC,EAAoBC,EAAKC,MAAzBF,gBACRG,QAAQC,IAAIL,EAAEM,OAAOC,OAErBN,EAAgBD,EAAEM,OAAOC,gFAGlB,IAAAC,EACoBC,KAAKN,MAAxBO,EADDF,EACCE,OAAQC,EADTH,EACSG,OAEhB,OACEC,EAAA,yBACEA,EAAA,kCACAA,EAAA,wBAAQC,SAAUJ,KAAKV,cACrBa,EAAA,sCACCF,EACCA,EAAOI,IAAI,SAAAC,GAAE,OACXH,EAAA,wBAAQL,MAAOQ,EAAGC,GAAIC,IAAKF,EAAGC,IAA9B,IACID,EAAGG,SAITN,EAAA,oDAIHD,EAASC,EAAA,sBAAMO,MAAO,CAAEC,MAAO,QAASC,QAAS,UAAxC,cAAuE,aA3B/DC,sCCIbC,EAAe,SAAAhD,GAAM,MAAK,CACrCU,KAAM,eACNG,QAASb,ICPEiD,EAAgB,SAAAC,GAAI,MAAK,CACpCxC,KAAM,yBACNG,QAASqC,IAGEC,EAAgB,SAAAnD,GAAM,MAAK,CACtCU,KAAM,eACNG,QAASb,ICFLoD,gMAIFC,EAF4BnB,KAAKN,MAAzByB,+DAMRxB,QAAQC,IAAI,sDAIZD,QAAQC,IAAI,UADL,IAAAG,EAGwCC,KAAKN,MAA5CO,EAHDF,EAGCE,OAAQlC,EAHTgC,EAGShC,UAAWyB,EAHpBO,EAGoBP,gBAE3B,OACEW,EAAA,qBAAKiB,UAAU,iBACbjB,EAAA,cAACkB,EAAD,CAAapB,OAAQA,EAAQC,OAAQnC,EAAWyB,gBAAiBA,YAlB9CqB,aAyCZS,cAjBS,SAAAnD,GAAK,MAAK,CAChC8B,OAAQ9B,EAAMD,cAAcJ,OAC5BC,UAAWI,EAAMD,cAAcH,UAC/BwD,OAAQpD,EAAMS,aAAad,OAC3B0D,gBAAiBrD,EAAMS,aAAab,YAGX,SAAA0D,GAAQ,MAAK,CACtCN,gBAAiB,WACfM,EF5BuB,eAAAC,EAAAjD,OAAAkD,EAAA,EAAAlD,CAAAmD,EAAAC,EAAAC,KAAM,SAAAC,EAAMN,GAAN,IAAA3D,EAAA,OAAA8D,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAERC,MAAM,+CAA+CC,KAAK,SAAAC,GAAQ,OACrFA,EAASC,SAHkB,OAEvBzE,EAFuBmE,EAAAO,KAM7Bf,EAASX,EAAahD,IANOmE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAQ7BtC,QAAQ+C,MAART,EAAAQ,IAR6B,eAAAR,EAAAC,KAAA,GAU7BT,EApBkC,CACpCjD,KAAM,kBACNG,SAkByB,IAVMsD,EAAAU,OAAA,6BAAAV,EAAAW,SAAAb,EAAA,uBAAN,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAA9C,KAAA5B,YAAA,KE+BzBoB,gBAAiB,WACfiC,EDhCuB,eAAClB,EAADnC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAM,EAAN,sBAAAsD,EAAAjD,OAAAkD,EAAA,EAAAlD,CAAAmD,EAAAC,EAAAC,KAAY,SAAAC,EAAMN,GAAN,IAAA3D,EAAA,OAAA8D,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACrCxC,QAAQC,IAAIW,GACZkB,EAASV,GAAc,IAFckB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKdC,MAAK,uDAAAW,OAAwDxC,IAAM8B,KACtF,SAAAC,GAAQ,OAAIA,EAASC,SANY,OAK7BzE,EAL6BmE,EAAAO,KASnC7C,QAAQC,IAAI9B,GAEZ2D,EAASR,EAAcnD,IAXYmE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAanCtC,QAAQC,IAARqC,EAAAQ,IAbmC,eAAAR,EAAAC,KAAA,GAenCT,EAASV,GAAc,IAfYkB,EAAAU,OAAA,6BAAAV,EAAAW,SAAAb,EAAA,wBAAZ,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAA9C,KAAA5B,YAAA,GCgCd4E,OAIE1B,CAGbJ,GC9CI+B,0LACK,IAAAlD,EACuBC,KAAKN,MAA3B6B,EADDxB,EACCwB,OAAQxD,EADTgC,EACShC,UAEhB,OADA4B,QAAQC,IAAI2B,GAEVpB,EAAA,qBAAKiB,UAAU,qCACZrD,EAAYoC,EAAA,qBAAKiB,UAAU,WAAc,KACzCG,EACGA,EAAOlB,IAAI,SAAAC,GAAE,OACXH,EAAA,qBAAKiB,UAAU,sBACbjB,EAAA,6BACEA,EAAA,qBAAK+C,IAAK5C,EAAG6C,aAAcC,IAAK9C,EAAGG,SAErCN,EAAA,uBAAIG,EAAGG,UAGX,aAhBcI,cA2BXS,cALS,SAAAnD,GAAK,MAAK,CAChCoD,OAAQpD,EAAMS,aAAad,OAC3BC,UAAWI,EAAMS,aAAab,YAK9B,KAFauD,CAGb2B,SCjBaI,MAVf,WACE,OACEC,EAAAzB,EAAA0B,cAACC,EAAA,EAAD,CAAUvE,MAAOA,GACfqE,EAAAzB,EAAA0B,cAAA,OAAKL,IAAKO,IAAMrC,UAAU,WAAWgC,IAAI,SACzCE,EAAAzB,EAAA0B,cAACG,EAAD,MACAJ,EAAAzB,EAAA0B,cAACI,EAAD,QCAcC,QACW,cAA7B9E,OAAO+E,SAASC,UAEe,UAA7BhF,OAAO+E,SAASC,UAEhBhF,OAAO+E,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOX,EAAAzB,EAAA0B,cAACW,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlC,KAAK,SAAAmC,GACjCA,EAAaC","file":"static/js/main.237f1a9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const initialState = {\r\n  result: null,\r\n  isLoading: true,\r\n};\r\n\r\nexport const selectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_ALBUMS':\r\n      return { ...state, result: action.payload };\r\n    case 'DATA_IS_LOADING':\r\n      return { ...state, isLoading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  result: null,\r\n  isLoading: false,\r\n};\r\n\r\nexport const photoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_PHOTOS':\r\n      return { ...state, result: action.payload };\r\n    case 'DATA_PHOTOS_IS_LOADING':\r\n      return { ...state, isLoading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport { selectReducer } from './albumSelect/reducer';\r\nimport { photoReducer } from './photosData/reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  selectReducer,\r\n  photoReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../redux-modules';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import * as React from 'react';\r\n\r\nclass AlbumSelect extends React.Component {\r\n  handleChange = e => {\r\n    const { fetchDataPhotos } = this.props;\r\n    console.log(e.target.value);\r\n\r\n    fetchDataPhotos(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { albums, loader } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Albums</h1>\r\n        <select onChange={this.handleChange}>\r\n          <option>Albums</option>\r\n          {albums ? (\r\n            albums.map(el => (\r\n              <option value={el.id} key={el.id}>\r\n                ${el.title}\r\n              </option>\r\n            ))\r\n          ) : (\r\n            <option>Soething went wrong</option>\r\n          )}\r\n        </select>\r\n\r\n        {loader ? <span style={{ color: 'white', display: 'block' }}>Loading...</span> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlbumSelect;\r\n","// TODO TURCH CONST and global\r\nexport const dataIsLoading = bool => ({\r\n  type: 'DATA_IS_LOADING',\r\n  payload: bool,\r\n});\r\n\r\nexport const fetchSuccess = result => ({\r\n  type: 'FETCH_ALBUMS',\r\n  payload: result,\r\n});\r\n\r\nexport const fetchAlbums = () => async dispatch => {\r\n  try {\r\n    const result = await fetch('https://jsonplaceholder.typicode.com/albums').then(response =>\r\n      response.json()\r\n    );\r\n\r\n    dispatch(fetchSuccess(result));\r\n  } catch (err) {\r\n    console.error(err);\r\n  } finally {\r\n    dispatch(dataIsLoading(false));\r\n  }\r\n};\r\n","// TODO TURCH CONST and global\r\nexport const dataIsLoading = bool => ({\r\n  type: 'DATA_PHOTOS_IS_LOADING',\r\n  payload: bool,\r\n});\r\n\r\nexport const photosSuccess = result => ({\r\n  type: 'FETCH_PHOTOS',\r\n  payload: result,\r\n});\r\n\r\nexport const fetchPhotos = (id = 1) => async dispatch => {\r\n  console.log(id);\r\n  dispatch(dataIsLoading(true));\r\n\r\n  try {\r\n    const result = await fetch(`https://jsonplaceholder.typicode.com/photos?albumId=${id}`).then(\r\n      response => response.json()\r\n    );\r\n\r\n    console.log(result);\r\n\r\n    dispatch(photosSuccess(result));\r\n  } catch (err) {\r\n    console.log(err);\r\n  } finally {\r\n    dispatch(dataIsLoading(false));\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AlbumSelect } from '../index';\r\nimport { fetchAlbums } from '../../redux-modules/albumSelect/actions';\r\nimport { fetchPhotos } from '../../redux-modules/photosData/actions';\r\n\r\nclass RequestPanel extends React.Component {\r\n  componentWillMount() {\r\n    const { fetchDataAlbums } = this.props;\r\n\r\n    fetchDataAlbums();\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('componentDidMount');\r\n  }\r\n\r\n  render() {\r\n    console.log('render');\r\n\r\n    const { albums, isLoading, fetchDataPhotos } = this.props;\r\n\r\n    return (\r\n      <div className=\"request-panel\">\r\n        <AlbumSelect albums={albums} loader={isLoading} fetchDataPhotos={fetchDataPhotos} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  albums: state.selectReducer.result,\r\n  isLoading: state.selectReducer.isLoading,\r\n  photos: state.photoReducer.result,\r\n  isPhotosLoading: state.photoReducer.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchDataAlbums: () => {\r\n    dispatch(fetchAlbums());\r\n  },\r\n\r\n  fetchDataPhotos: () => {\r\n    dispatch(fetchPhotos());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RequestPanel);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './index.scss';\r\n\r\nclass ResultPanel extends React.Component {\r\n  render() {\r\n    const { photos, isLoading } = this.props;\r\n    console.log(photos);\r\n    return (\r\n      <div className=\"container result-panel__container\">\r\n        {isLoading ? <div className=\"loader\" /> : null}\r\n        {photos\r\n          ? photos.map(el => (\r\n              <div className=\"result-panel__card\">\r\n                <picture>\r\n                  <img src={el.thumbnailUrl} alt={el.title} />\r\n                </picture>\r\n                <p>{el.title}</p>\r\n              </div>\r\n            ))\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  photos: state.photoReducer.result,\r\n  isLoading: state.photoReducer.isLoading,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(ResultPanel);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport logo from './logo.svg';\r\nimport { RequestPanel, ResultPanel } from './components';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <RequestPanel />\r\n      <ResultPanel />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}